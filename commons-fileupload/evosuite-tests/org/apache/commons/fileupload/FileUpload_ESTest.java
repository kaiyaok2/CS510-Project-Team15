/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 22 14:13:44 GMT 2024
 */

package org.apache.commons.fileupload;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import org.apache.commons.fileupload.FileItemFactory;
import org.apache.commons.fileupload.FileUpload;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class FileUpload_ESTest extends FileUpload_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      FileItemFactory fileItemFactory0 = mock(FileItemFactory.class, new ViolatedAssumptionAnswer());
      FileUpload fileUpload0 = new FileUpload(0, fileItemFactory0);
      FileItemFactory fileItemFactory1 = mock(FileItemFactory.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(fileItemFactory1).toString();
      fileUpload0.setFileItemFactory(fileItemFactory1);
      FileItemFactory fileItemFactory2 = fileUpload0.getFileItemFactory();
      assertSame(fileItemFactory2, fileItemFactory1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      FileItemFactory fileItemFactory0 = mock(FileItemFactory.class, new ViolatedAssumptionAnswer());
      FileUpload fileUpload0 = new FileUpload(1, fileItemFactory0);
      assertEquals((-1L), fileUpload0.getFileCountMax());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      FileUpload fileUpload0 = new FileUpload(0, (FileItemFactory) null);
      FileItemFactory fileItemFactory0 = fileUpload0.getFileItemFactory();
      assertNull(fileItemFactory0);
  }
}
